"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./components/infinite-pannable-grid.tsx":
/*!***********************************************!*\
  !*** ./components/infinite-pannable-grid.tsx ***!
  \***********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchImages: () => (/* binding */ fetchImages),\n/* harmony export */   filterImages: () => (/* binding */ filterImages)\n/* harmony export */ });\n// lib/image-service.ts\nasync function fetchImages() {\n    const res = await fetch(\"/data.json\");\n    const data = await res.json();\n    return data.map((item, idx)=>{\n        var _item_id, _ref, _item_tags, _item_description;\n        return {\n            id: (_ref = (_item_id = item.id) !== null && _item_id !== void 0 ? _item_id : item.slug) !== null && _ref !== void 0 ? _ref : String(idx),\n            filename: item.filename,\n            slug: item.slug,\n            name: item.name,\n            tags: (_item_tags = item.tags) !== null && _item_tags !== void 0 ? _item_tags : [],\n            desc: (_item_description = item.description) !== null && _item_description !== void 0 ? _item_description : \"\",\n            imageUrl: \"/images/\".concat(item.filename)\n        };\n    });\n}\n// Filtering helper (by name, tag, etc.)\nfunction filterImages(images) {\n    let search = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"\", selectedTag = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;\n    const searchLower = search.trim().toLowerCase();\n    return images.filter((item)=>{\n        var _item_tags;\n        const matchTag = !selectedTag || ((_item_tags = item.tags) !== null && _item_tags !== void 0 ? _item_tags : []).map((t)=>t.toLowerCase()).includes(selectedTag.toLowerCase());\n        var _item_tags1;\n        const matchSearch = !searchLower || item.name.toLowerCase().includes(searchLower) || ((_item_tags1 = item.tags) !== null && _item_tags1 !== void 0 ? _item_tags1 : []).some((tag)=>tag.toLowerCase().includes(searchLower));\n        return matchTag && matchSearch;\n    });\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2NvbXBvbmVudHMvaW5maW5pdGUtcGFubmFibGUtZ3JpZC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSx1QkFBdUI7QUFJaEIsZUFBZUE7SUFDcEIsTUFBTUMsTUFBTSxNQUFNQyxNQUFNO0lBQ3hCLE1BQU1DLE9BQU8sTUFBTUYsSUFBSUcsSUFBSTtJQUUzQixPQUFPRCxLQUFLRSxHQUFHLENBQUMsQ0FBQ0MsTUFBV0M7WUFDdEJELFVBQUFBLE1BSUVBLFlBQ0FBO2VBTnFDO1lBQzNDRSxJQUFJRixDQUFBQSxPQUFBQSxDQUFBQSxXQUFBQSxLQUFLRSxFQUFFLGNBQVBGLHNCQUFBQSxXQUFXQSxLQUFLRyxJQUFJLGNBQXBCSCxrQkFBQUEsT0FBd0JJLE9BQU9IO1lBQ25DSSxVQUFVTCxLQUFLSyxRQUFRO1lBQ3ZCRixNQUFNSCxLQUFLRyxJQUFJO1lBQ2ZHLE1BQU1OLEtBQUtNLElBQUk7WUFDZkMsTUFBTVAsQ0FBQUEsYUFBQUEsS0FBS08sSUFBSSxjQUFUUCx3QkFBQUEsYUFBYSxFQUFFO1lBQ3JCUSxNQUFNUixDQUFBQSxvQkFBQUEsS0FBS1MsV0FBVyxjQUFoQlQsK0JBQUFBLG9CQUFvQjtZQUMxQlUsVUFBVSxXQUF5QixPQUFkVixLQUFLSyxRQUFRO1FBQ3BDOztBQUNGO0FBRUEsd0NBQXdDO0FBQ2pDLFNBQVNNLGFBQ2RDLE1BQW1CO1FBQ25CQyxTQUFBQSxpRUFBaUIsSUFDakJDLGNBQUFBLGlFQUE2QjtJQUU3QixNQUFNQyxjQUFjRixPQUFPRyxJQUFJLEdBQUdDLFdBQVc7SUFDN0MsT0FBT0wsT0FBT00sTUFBTSxDQUFDLENBQUNsQjtZQUVEQTtRQURuQixNQUFNbUIsV0FDSixDQUFDTCxlQUFlLENBQUNkLENBQUFBLGFBQUFBLEtBQUtPLElBQUksY0FBVFAsd0JBQUFBLGFBQWEsRUFBRSxFQUFFRCxHQUFHLENBQUNxQixDQUFBQSxJQUFLQSxFQUFFSCxXQUFXLElBQUlJLFFBQVEsQ0FBQ1AsWUFBWUcsV0FBVztZQUkzRmpCO1FBSEgsTUFBTXNCLGNBQ0osQ0FBQ1AsZUFDRGYsS0FBS00sSUFBSSxDQUFDVyxXQUFXLEdBQUdJLFFBQVEsQ0FBQ04sZ0JBQ2pDLENBQUNmLENBQUFBLGNBQUFBLEtBQUtPLElBQUksY0FBVFAseUJBQUFBLGNBQWEsRUFBRSxFQUFFdUIsSUFBSSxDQUFDLENBQUNDLE1BQVFBLElBQUlQLFdBQVcsR0FBR0ksUUFBUSxDQUFDTjtRQUM3RCxPQUFPSSxZQUFZRztJQUNyQjtBQUNGIiwic291cmNlcyI6WyIvVXNlcnMvdml0b2F0bW8vRG9jdW1lbnRzL0dpdEh1Yi92MC11bmxpbWl0ZWQtZ3JpZC9jb21wb25lbnRzL2luZmluaXRlLXBhbm5hYmxlLWdyaWQudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGxpYi9pbWFnZS1zZXJ2aWNlLnRzXG5cbmltcG9ydCB0eXBlIHsgSW1hZ2VJdGVtIH0gZnJvbSBcIi4vdHlwZXNcIjtcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGZldGNoSW1hZ2VzKCk6IFByb21pc2U8SW1hZ2VJdGVtW10+IHtcbiAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goXCIvZGF0YS5qc29uXCIpO1xuICBjb25zdCBkYXRhID0gYXdhaXQgcmVzLmpzb24oKTtcblxuICByZXR1cm4gZGF0YS5tYXAoKGl0ZW06IGFueSwgaWR4OiBudW1iZXIpID0+ICh7XG4gICAgaWQ6IGl0ZW0uaWQgPz8gaXRlbS5zbHVnID8/IFN0cmluZyhpZHgpLFxuICAgIGZpbGVuYW1lOiBpdGVtLmZpbGVuYW1lLFxuICAgIHNsdWc6IGl0ZW0uc2x1ZyxcbiAgICBuYW1lOiBpdGVtLm5hbWUsXG4gICAgdGFnczogaXRlbS50YWdzID8/IFtdLFxuICAgIGRlc2M6IGl0ZW0uZGVzY3JpcHRpb24gPz8gXCJcIiwgIC8vIOKGkCB1c2UgaXRlbS5kZXNjcmlwdGlvbiBmcm9tIEpTT04sIGJ1dCB5b3VyIGNvZGUgdXNlcyAuZGVzY1xuICAgIGltYWdlVXJsOiBgL2ltYWdlcy8ke2l0ZW0uZmlsZW5hbWV9YCxcbiAgfSkpO1xufVxuXG4vLyBGaWx0ZXJpbmcgaGVscGVyIChieSBuYW1lLCB0YWcsIGV0Yy4pXG5leHBvcnQgZnVuY3Rpb24gZmlsdGVySW1hZ2VzKFxuICBpbWFnZXM6IEltYWdlSXRlbVtdLFxuICBzZWFyY2g6IHN0cmluZyA9IFwiXCIsXG4gIHNlbGVjdGVkVGFnOiBzdHJpbmcgfCBudWxsID0gbnVsbFxuKTogSW1hZ2VJdGVtW10ge1xuICBjb25zdCBzZWFyY2hMb3dlciA9IHNlYXJjaC50cmltKCkudG9Mb3dlckNhc2UoKVxuICByZXR1cm4gaW1hZ2VzLmZpbHRlcigoaXRlbSkgPT4ge1xuICAgIGNvbnN0IG1hdGNoVGFnID1cbiAgICAgICFzZWxlY3RlZFRhZyB8fCAoaXRlbS50YWdzID8/IFtdKS5tYXAodCA9PiB0LnRvTG93ZXJDYXNlKCkpLmluY2x1ZGVzKHNlbGVjdGVkVGFnLnRvTG93ZXJDYXNlKCkpXG4gICAgY29uc3QgbWF0Y2hTZWFyY2ggPVxuICAgICAgIXNlYXJjaExvd2VyIHx8XG4gICAgICBpdGVtLm5hbWUudG9Mb3dlckNhc2UoKS5pbmNsdWRlcyhzZWFyY2hMb3dlcikgfHxcbiAgICAgIChpdGVtLnRhZ3MgPz8gW10pLnNvbWUoKHRhZykgPT4gdGFnLnRvTG93ZXJDYXNlKCkuaW5jbHVkZXMoc2VhcmNoTG93ZXIpKVxuICAgIHJldHVybiBtYXRjaFRhZyAmJiBtYXRjaFNlYXJjaFxuICB9KVxufVxuIl0sIm5hbWVzIjpbImZldGNoSW1hZ2VzIiwicmVzIiwiZmV0Y2giLCJkYXRhIiwianNvbiIsIm1hcCIsIml0ZW0iLCJpZHgiLCJpZCIsInNsdWciLCJTdHJpbmciLCJmaWxlbmFtZSIsIm5hbWUiLCJ0YWdzIiwiZGVzYyIsImRlc2NyaXB0aW9uIiwiaW1hZ2VVcmwiLCJmaWx0ZXJJbWFnZXMiLCJpbWFnZXMiLCJzZWFyY2giLCJzZWxlY3RlZFRhZyIsInNlYXJjaExvd2VyIiwidHJpbSIsInRvTG93ZXJDYXNlIiwiZmlsdGVyIiwibWF0Y2hUYWciLCJ0IiwiaW5jbHVkZXMiLCJtYXRjaFNlYXJjaCIsInNvbWUiLCJ0YWciXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/infinite-pannable-grid.tsx\n"));

/***/ })

});