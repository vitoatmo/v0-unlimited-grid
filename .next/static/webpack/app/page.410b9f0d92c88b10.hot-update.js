"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/image-service.ts":
/*!******************************!*\
  !*** ./lib/image-service.ts ***!
  \******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchImagesClient: () => (/* binding */ fetchImagesClient),\n/* harmony export */   filterImages: () => (/* binding */ filterImages),\n/* harmony export */   getImageBySlug: () => (/* binding */ getImageBySlug)\n/* harmony export */ });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"(app-pages-browser)/./lib/utils.ts\");\n// lib/image-service.ts\n\n/**\n * Client-side: fetch images from /data.json\n * Only call in Client Components or useEffect in App Router\n */ async function fetchImagesClient() {\n    try {\n        const response = await fetch(\"/data.json\");\n        if (!response.ok) {\n            throw new Error(\"HTTP error! status: \".concat(response.status));\n        }\n        const data = await response.json();\n        return processImageData(data);\n    } catch (error) {\n        console.error(\"Failed to fetch images:\", error);\n        return [];\n    }\n}\n/**\n * Process image array: filter & fix slug\n */ function processImageData(data) {\n    return data.filter((item)=>item.imageUrl ? item.imageUrl.startsWith(\"http\") || item.imageUrl.startsWith(\"/\") : item.filename // fallback to filename check for local PNGs\n    ).map((item)=>{\n        if (!item.slug || item.slug.includes(\"-new\")) {\n            item.slug = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.slugify)(item.name);\n        }\n        // If no imageUrl, fallback to /[filename]\n        if (!item.imageUrl && item.filename) {\n            item.imageUrl = \"/\" + item.filename;\n        }\n        return item;\n    });\n}\n/**\n * Filter image array by search and tag\n */ function filterImages(images, searchQuery, selectedTag) {\n    return images.filter((item)=>{\n        var _item_description;\n        const matchesSearch = !searchQuery || item.name.toLowerCase().includes(searchQuery.toLowerCase()) || ((_item_description = item.description) !== null && _item_description !== void 0 ? _item_description : \"\").toLowerCase().includes(searchQuery.toLowerCase());\n        const matchesTag = !selectedTag || item.tags.includes(selectedTag);\n        return matchesSearch && matchesTag;\n    });\n}\n/**\n * Get image by slug from loaded images array (Client Side)\n */ function getImageBySlug(images, slug) {\n    return images.find((img)=>img.slug === slug) || null;\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9pbWFnZS1zZXJ2aWNlLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSx1QkFBdUI7QUFHVTtBQUVqQzs7O0NBR0MsR0FDTSxlQUFlQztJQUNwQixJQUFJO1FBQ0YsTUFBTUMsV0FBVyxNQUFNQyxNQUFNO1FBQzdCLElBQUksQ0FBQ0QsU0FBU0UsRUFBRSxFQUFFO1lBQ2hCLE1BQU0sSUFBSUMsTUFBTSx1QkFBdUMsT0FBaEJILFNBQVNJLE1BQU07UUFDeEQ7UUFDQSxNQUFNQyxPQUFPLE1BQU1MLFNBQVNNLElBQUk7UUFDaEMsT0FBT0MsaUJBQWlCRjtJQUMxQixFQUFFLE9BQU9HLE9BQU87UUFDZEMsUUFBUUQsS0FBSyxDQUFDLDJCQUEyQkE7UUFDekMsT0FBTyxFQUFFO0lBQ1g7QUFDRjtBQUVBOztDQUVDLEdBQ0QsU0FBU0QsaUJBQWlCRixJQUFXO0lBQ25DLE9BQU9BLEtBQ0pLLE1BQU0sQ0FBQyxDQUFDQyxPQUNQQSxLQUFLQyxRQUFRLEdBQ1JELEtBQUtDLFFBQVEsQ0FBQ0MsVUFBVSxDQUFDLFdBQVdGLEtBQUtDLFFBQVEsQ0FBQ0MsVUFBVSxDQUFDLE9BQzlERixLQUFLRyxRQUFRLENBQUMsNENBQTRDO01BRS9EQyxHQUFHLENBQUMsQ0FBQ0o7UUFDSixJQUFJLENBQUNBLEtBQUtLLElBQUksSUFBSUwsS0FBS0ssSUFBSSxDQUFDQyxRQUFRLENBQUMsU0FBUztZQUM1Q04sS0FBS0ssSUFBSSxHQUFHbEIsK0NBQU9BLENBQUNhLEtBQUtPLElBQUk7UUFDL0I7UUFDQSwwQ0FBMEM7UUFDMUMsSUFBSSxDQUFDUCxLQUFLQyxRQUFRLElBQUlELEtBQUtHLFFBQVEsRUFBRTtZQUNuQ0gsS0FBS0MsUUFBUSxHQUFHLE1BQU1ELEtBQUtHLFFBQVE7UUFDckM7UUFDQSxPQUFPSDtJQUNUO0FBQ0o7QUFFQTs7Q0FFQyxHQUNNLFNBQVNRLGFBQ2RDLE1BQW1CLEVBQ25CQyxXQUFtQixFQUNuQkMsV0FBMEI7SUFFMUIsT0FBT0YsT0FBT1YsTUFBTSxDQUFDLENBQUNDO1lBSWpCQTtRQUhILE1BQU1ZLGdCQUNKLENBQUNGLGVBQ0RWLEtBQUtPLElBQUksQ0FBQ00sV0FBVyxHQUFHUCxRQUFRLENBQUNJLFlBQVlHLFdBQVcsT0FDeEQsQ0FBQ2IsQ0FBQUEsb0JBQUFBLEtBQUtjLFdBQVcsY0FBaEJkLCtCQUFBQSxvQkFBb0IsRUFBQyxFQUFHYSxXQUFXLEdBQUdQLFFBQVEsQ0FBQ0ksWUFBWUcsV0FBVztRQUV6RSxNQUFNRSxhQUFhLENBQUNKLGVBQWVYLEtBQUtnQixJQUFJLENBQUNWLFFBQVEsQ0FBQ0s7UUFDdEQsT0FBT0MsaUJBQWlCRztJQUMxQjtBQUNGO0FBRUE7O0NBRUMsR0FDTSxTQUFTRSxlQUNkUixNQUFtQixFQUNuQkosSUFBWTtJQUVaLE9BQU9JLE9BQU9TLElBQUksQ0FBQyxDQUFDQyxNQUFRQSxJQUFJZCxJQUFJLEtBQUtBLFNBQVM7QUFDcEQiLCJzb3VyY2VzIjpbIi9Vc2Vycy92aXRvYXRtby9Eb2N1bWVudHMvR2l0SHViL3YwLXVubGltaXRlZC1ncmlkL2xpYi9pbWFnZS1zZXJ2aWNlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGxpYi9pbWFnZS1zZXJ2aWNlLnRzXG5cbmltcG9ydCB0eXBlIHsgSW1hZ2VJdGVtIH0gZnJvbSBcIi4vdHlwZXNcIlxuaW1wb3J0IHsgc2x1Z2lmeSB9IGZyb20gXCIuL3V0aWxzXCJcblxuLyoqXG4gKiBDbGllbnQtc2lkZTogZmV0Y2ggaW1hZ2VzIGZyb20gL2RhdGEuanNvblxuICogT25seSBjYWxsIGluIENsaWVudCBDb21wb25lbnRzIG9yIHVzZUVmZmVjdCBpbiBBcHAgUm91dGVyXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBmZXRjaEltYWdlc0NsaWVudCgpOiBQcm9taXNlPEltYWdlSXRlbVtdPiB7XG4gIHRyeSB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChcIi9kYXRhLmpzb25cIilcbiAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYEhUVFAgZXJyb3IhIHN0YXR1czogJHtyZXNwb25zZS5zdGF0dXN9YClcbiAgICB9XG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKVxuICAgIHJldHVybiBwcm9jZXNzSW1hZ2VEYXRhKGRhdGEpXG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcihcIkZhaWxlZCB0byBmZXRjaCBpbWFnZXM6XCIsIGVycm9yKVxuICAgIHJldHVybiBbXVxuICB9XG59XG5cbi8qKlxuICogUHJvY2VzcyBpbWFnZSBhcnJheTogZmlsdGVyICYgZml4IHNsdWdcbiAqL1xuZnVuY3Rpb24gcHJvY2Vzc0ltYWdlRGF0YShkYXRhOiBhbnlbXSk6IEltYWdlSXRlbVtdIHtcbiAgcmV0dXJuIGRhdGFcbiAgICAuZmlsdGVyKChpdGVtOiBhbnkpID0+XG4gICAgICBpdGVtLmltYWdlVXJsXG4gICAgICAgID8gKGl0ZW0uaW1hZ2VVcmwuc3RhcnRzV2l0aChcImh0dHBcIikgfHwgaXRlbS5pbWFnZVVybC5zdGFydHNXaXRoKFwiL1wiKSlcbiAgICAgICAgOiBpdGVtLmZpbGVuYW1lIC8vIGZhbGxiYWNrIHRvIGZpbGVuYW1lIGNoZWNrIGZvciBsb2NhbCBQTkdzXG4gICAgKVxuICAgIC5tYXAoKGl0ZW06IGFueSkgPT4ge1xuICAgICAgaWYgKCFpdGVtLnNsdWcgfHwgaXRlbS5zbHVnLmluY2x1ZGVzKFwiLW5ld1wiKSkge1xuICAgICAgICBpdGVtLnNsdWcgPSBzbHVnaWZ5KGl0ZW0ubmFtZSlcbiAgICAgIH1cbiAgICAgIC8vIElmIG5vIGltYWdlVXJsLCBmYWxsYmFjayB0byAvW2ZpbGVuYW1lXVxuICAgICAgaWYgKCFpdGVtLmltYWdlVXJsICYmIGl0ZW0uZmlsZW5hbWUpIHtcbiAgICAgICAgaXRlbS5pbWFnZVVybCA9IFwiL1wiICsgaXRlbS5maWxlbmFtZVxuICAgICAgfVxuICAgICAgcmV0dXJuIGl0ZW1cbiAgICB9KVxufVxuXG4vKipcbiAqIEZpbHRlciBpbWFnZSBhcnJheSBieSBzZWFyY2ggYW5kIHRhZ1xuICovXG5leHBvcnQgZnVuY3Rpb24gZmlsdGVySW1hZ2VzKFxuICBpbWFnZXM6IEltYWdlSXRlbVtdLFxuICBzZWFyY2hRdWVyeTogc3RyaW5nLFxuICBzZWxlY3RlZFRhZzogc3RyaW5nIHwgbnVsbFxuKTogSW1hZ2VJdGVtW10ge1xuICByZXR1cm4gaW1hZ2VzLmZpbHRlcigoaXRlbSkgPT4ge1xuICAgIGNvbnN0IG1hdGNoZXNTZWFyY2ggPVxuICAgICAgIXNlYXJjaFF1ZXJ5IHx8XG4gICAgICBpdGVtLm5hbWUudG9Mb3dlckNhc2UoKS5pbmNsdWRlcyhzZWFyY2hRdWVyeS50b0xvd2VyQ2FzZSgpKSB8fFxuICAgICAgKGl0ZW0uZGVzY3JpcHRpb24gPz8gXCJcIikudG9Mb3dlckNhc2UoKS5pbmNsdWRlcyhzZWFyY2hRdWVyeS50b0xvd2VyQ2FzZSgpKVxuXG4gICAgY29uc3QgbWF0Y2hlc1RhZyA9ICFzZWxlY3RlZFRhZyB8fCBpdGVtLnRhZ3MuaW5jbHVkZXMoc2VsZWN0ZWRUYWcpXG4gICAgcmV0dXJuIG1hdGNoZXNTZWFyY2ggJiYgbWF0Y2hlc1RhZ1xuICB9KVxufVxuXG4vKipcbiAqIEdldCBpbWFnZSBieSBzbHVnIGZyb20gbG9hZGVkIGltYWdlcyBhcnJheSAoQ2xpZW50IFNpZGUpXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRJbWFnZUJ5U2x1ZyhcbiAgaW1hZ2VzOiBJbWFnZUl0ZW1bXSxcbiAgc2x1Zzogc3RyaW5nXG4pOiBJbWFnZUl0ZW0gfCBudWxsIHtcbiAgcmV0dXJuIGltYWdlcy5maW5kKChpbWcpID0+IGltZy5zbHVnID09PSBzbHVnKSB8fCBudWxsXG59XG4iXSwibmFtZXMiOlsic2x1Z2lmeSIsImZldGNoSW1hZ2VzQ2xpZW50IiwicmVzcG9uc2UiLCJmZXRjaCIsIm9rIiwiRXJyb3IiLCJzdGF0dXMiLCJkYXRhIiwianNvbiIsInByb2Nlc3NJbWFnZURhdGEiLCJlcnJvciIsImNvbnNvbGUiLCJmaWx0ZXIiLCJpdGVtIiwiaW1hZ2VVcmwiLCJzdGFydHNXaXRoIiwiZmlsZW5hbWUiLCJtYXAiLCJzbHVnIiwiaW5jbHVkZXMiLCJuYW1lIiwiZmlsdGVySW1hZ2VzIiwiaW1hZ2VzIiwic2VhcmNoUXVlcnkiLCJzZWxlY3RlZFRhZyIsIm1hdGNoZXNTZWFyY2giLCJ0b0xvd2VyQ2FzZSIsImRlc2NyaXB0aW9uIiwibWF0Y2hlc1RhZyIsInRhZ3MiLCJnZXRJbWFnZUJ5U2x1ZyIsImZpbmQiLCJpbWciXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/image-service.ts\n"));

/***/ })

});