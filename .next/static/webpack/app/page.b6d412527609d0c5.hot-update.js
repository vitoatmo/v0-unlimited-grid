"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/image-service.ts":
/*!******************************!*\
  !*** ./lib/image-service.ts ***!
  \******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchImagesClient: () => (/* binding */ fetchImagesClient),\n/* harmony export */   filterImages: () => (/* binding */ filterImages)\n/* harmony export */ });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"(app-pages-browser)/./lib/utils.ts\");\n// lib/image-service.ts\n\nasync function fetchImagesClient() {\n    try {\n        const response = await fetch(\"/data.json\");\n        if (!response.ok) {\n            throw new Error(\"HTTP error! status: \".concat(response.status));\n        }\n        const data = await response.json();\n        return processImageData(data);\n    } catch (error) {\n        console.error(\"Failed to fetch images:\", error);\n        return [];\n    }\n}\nfunction processImageData(data) {\n    return data.filter((item)=>item.imageUrl && (item.imageUrl.startsWith(\"http\") || item.imageUrl.startsWith(\"/\"))).map((item)=>{\n        if (!item.slug || item.slug.includes(\"-new\")) {\n            item.slug = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.slugify)(item.name);\n        }\n        return item;\n    });\n}\nfunction filterImages(images, searchQuery, selectedTag) {\n    return images.filter((item)=>{\n        var _item_desc;\n        const matchesSearch = !searchQuery || item.name.toLowerCase().includes(searchQuery.toLowerCase()) || ((_item_desc = item.desc) !== null && _item_desc !== void 0 ? _item_desc : \"\").toLowerCase().includes(searchQuery.toLowerCase());\n        const matchesTag = !selectedTag || item.tags.includes(selectedTag);\n        return matchesSearch && matchesTag;\n    });\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9pbWFnZS1zZXJ2aWNlLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLHVCQUF1QjtBQUdVO0FBRTFCLGVBQWVDO0lBQ3BCLElBQUk7UUFDRixNQUFNQyxXQUFXLE1BQU1DLE1BQU07UUFDN0IsSUFBSSxDQUFDRCxTQUFTRSxFQUFFLEVBQUU7WUFDaEIsTUFBTSxJQUFJQyxNQUFNLHVCQUF1QyxPQUFoQkgsU0FBU0ksTUFBTTtRQUN4RDtRQUNBLE1BQU1DLE9BQU8sTUFBTUwsU0FBU00sSUFBSTtRQUNoQyxPQUFPQyxpQkFBaUJGO0lBQzFCLEVBQUUsT0FBT0csT0FBTztRQUNkQyxRQUFRRCxLQUFLLENBQUMsMkJBQTJCQTtRQUN6QyxPQUFPLEVBQUU7SUFDWDtBQUNGO0FBRUEsU0FBU0QsaUJBQWlCRixJQUFXO0lBQ25DLE9BQU9BLEtBQ0pLLE1BQU0sQ0FBQyxDQUFDQyxPQUNQQSxLQUFLQyxRQUFRLElBQ1pELENBQUFBLEtBQUtDLFFBQVEsQ0FBQ0MsVUFBVSxDQUFDLFdBQVdGLEtBQUtDLFFBQVEsQ0FBQ0MsVUFBVSxDQUFDLElBQUcsR0FFbEVDLEdBQUcsQ0FBQyxDQUFDSDtRQUNKLElBQUksQ0FBQ0EsS0FBS0ksSUFBSSxJQUFJSixLQUFLSSxJQUFJLENBQUNDLFFBQVEsQ0FBQyxTQUFTO1lBQzVDTCxLQUFLSSxJQUFJLEdBQUdqQiwrQ0FBT0EsQ0FBQ2EsS0FBS00sSUFBSTtRQUMvQjtRQUNBLE9BQU9OO0lBQ1Q7QUFDSjtBQUVPLFNBQVNPLGFBQ2RDLE1BQW1CLEVBQ25CQyxXQUFtQixFQUNuQkMsV0FBMEI7SUFFMUIsT0FBT0YsT0FBT1QsTUFBTSxDQUFDLENBQUNDO1lBSWpCQTtRQUhILE1BQU1XLGdCQUNKLENBQUNGLGVBQ0RULEtBQUtNLElBQUksQ0FBQ00sV0FBVyxHQUFHUCxRQUFRLENBQUNJLFlBQVlHLFdBQVcsT0FDeEQsQ0FBQ1osQ0FBQUEsYUFBQUEsS0FBS2EsSUFBSSxjQUFUYix3QkFBQUEsYUFBYSxFQUFDLEVBQUdZLFdBQVcsR0FBR1AsUUFBUSxDQUFDSSxZQUFZRyxXQUFXO1FBRWxFLE1BQU1FLGFBQWEsQ0FBQ0osZUFBZVYsS0FBS2UsSUFBSSxDQUFDVixRQUFRLENBQUNLO1FBQ3RELE9BQU9DLGlCQUFpQkc7SUFDMUI7QUFDRiIsInNvdXJjZXMiOlsiL1VzZXJzL3ZpdG9hdG1vL0RvY3VtZW50cy9HaXRIdWIvdjAtdW5saW1pdGVkLWdyaWQvbGliL2ltYWdlLXNlcnZpY2UudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gbGliL2ltYWdlLXNlcnZpY2UudHNcblxuaW1wb3J0IHR5cGUgeyBJbWFnZUl0ZW0gfSBmcm9tIFwiLi90eXBlc1wiXG5pbXBvcnQgeyBzbHVnaWZ5IH0gZnJvbSBcIi4vdXRpbHNcIlxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZmV0Y2hJbWFnZXNDbGllbnQoKTogUHJvbWlzZTxJbWFnZUl0ZW1bXT4ge1xuICB0cnkge1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goXCIvZGF0YS5qc29uXCIpXG4gICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBIVFRQIGVycm9yISBzdGF0dXM6ICR7cmVzcG9uc2Uuc3RhdHVzfWApXG4gICAgfVxuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKClcbiAgICByZXR1cm4gcHJvY2Vzc0ltYWdlRGF0YShkYXRhKVxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoXCJGYWlsZWQgdG8gZmV0Y2ggaW1hZ2VzOlwiLCBlcnJvcilcbiAgICByZXR1cm4gW11cbiAgfVxufVxuXG5mdW5jdGlvbiBwcm9jZXNzSW1hZ2VEYXRhKGRhdGE6IGFueVtdKTogSW1hZ2VJdGVtW10ge1xuICByZXR1cm4gZGF0YVxuICAgIC5maWx0ZXIoKGl0ZW06IGFueSkgPT5cbiAgICAgIGl0ZW0uaW1hZ2VVcmwgJiZcbiAgICAgIChpdGVtLmltYWdlVXJsLnN0YXJ0c1dpdGgoXCJodHRwXCIpIHx8IGl0ZW0uaW1hZ2VVcmwuc3RhcnRzV2l0aChcIi9cIikpXG4gICAgKVxuICAgIC5tYXAoKGl0ZW06IGFueSkgPT4ge1xuICAgICAgaWYgKCFpdGVtLnNsdWcgfHwgaXRlbS5zbHVnLmluY2x1ZGVzKFwiLW5ld1wiKSkge1xuICAgICAgICBpdGVtLnNsdWcgPSBzbHVnaWZ5KGl0ZW0ubmFtZSlcbiAgICAgIH1cbiAgICAgIHJldHVybiBpdGVtXG4gICAgfSlcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGZpbHRlckltYWdlcyhcbiAgaW1hZ2VzOiBJbWFnZUl0ZW1bXSxcbiAgc2VhcmNoUXVlcnk6IHN0cmluZyxcbiAgc2VsZWN0ZWRUYWc6IHN0cmluZyB8IG51bGxcbik6IEltYWdlSXRlbVtdIHtcbiAgcmV0dXJuIGltYWdlcy5maWx0ZXIoKGl0ZW0pID0+IHtcbiAgICBjb25zdCBtYXRjaGVzU2VhcmNoID1cbiAgICAgICFzZWFyY2hRdWVyeSB8fFxuICAgICAgaXRlbS5uYW1lLnRvTG93ZXJDYXNlKCkuaW5jbHVkZXMoc2VhcmNoUXVlcnkudG9Mb3dlckNhc2UoKSkgfHxcbiAgICAgIChpdGVtLmRlc2MgPz8gXCJcIikudG9Mb3dlckNhc2UoKS5pbmNsdWRlcyhzZWFyY2hRdWVyeS50b0xvd2VyQ2FzZSgpKVxuXG4gICAgY29uc3QgbWF0Y2hlc1RhZyA9ICFzZWxlY3RlZFRhZyB8fCBpdGVtLnRhZ3MuaW5jbHVkZXMoc2VsZWN0ZWRUYWcpXG4gICAgcmV0dXJuIG1hdGNoZXNTZWFyY2ggJiYgbWF0Y2hlc1RhZ1xuICB9KVxufVxuIl0sIm5hbWVzIjpbInNsdWdpZnkiLCJmZXRjaEltYWdlc0NsaWVudCIsInJlc3BvbnNlIiwiZmV0Y2giLCJvayIsIkVycm9yIiwic3RhdHVzIiwiZGF0YSIsImpzb24iLCJwcm9jZXNzSW1hZ2VEYXRhIiwiZXJyb3IiLCJjb25zb2xlIiwiZmlsdGVyIiwiaXRlbSIsImltYWdlVXJsIiwic3RhcnRzV2l0aCIsIm1hcCIsInNsdWciLCJpbmNsdWRlcyIsIm5hbWUiLCJmaWx0ZXJJbWFnZXMiLCJpbWFnZXMiLCJzZWFyY2hRdWVyeSIsInNlbGVjdGVkVGFnIiwibWF0Y2hlc1NlYXJjaCIsInRvTG93ZXJDYXNlIiwiZGVzYyIsIm1hdGNoZXNUYWciLCJ0YWdzIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/image-service.ts\n"));

/***/ })

});