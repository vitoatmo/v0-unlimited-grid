"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/image-service.ts":
/*!******************************!*\
  !*** ./lib/image-service.ts ***!
  \******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchImagesClient: () => (/* binding */ fetchImagesClient),\n/* harmony export */   fetchImagesServer: () => (/* binding */ fetchImagesServer),\n/* harmony export */   filterImages: () => (/* binding */ filterImages),\n/* harmony export */   getImageBySlug: () => (/* binding */ getImageBySlug)\n/* harmony export */ });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"(app-pages-browser)/./lib/utils.ts\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/process/browser.js\");\n\n/**\n * Client-side: fetch images from /data.json\n */ async function fetchImagesClient() {\n    try {\n        const response = await fetch(\"/data.json\");\n        if (!response.ok) {\n            throw new Error(\"HTTP error! status: \".concat(response.status));\n        }\n        const data = await response.json();\n        return processImageData(data);\n    } catch (error) {\n        console.error(\"Failed to fetch images:\", error);\n        return [];\n    }\n}\n/**\n * Server-side: read images from local file (public/data.json)\n */ async function fetchImagesServer() {\n    try {\n        if (true) {\n            throw new Error(\"fetchImagesServer() called on client\");\n        }\n        const fsModule = await Promise.resolve().then(function webpackMissingModule() { var e = new Error(\"Cannot find module 'fs'\"); e.code = 'MODULE_NOT_FOUND'; throw e; });\n        const fs = fsModule.promises;\n        const path = await __webpack_require__.e(/*! import() */ \"_app-pages-browser_node_modules_path_path_js\").then(__webpack_require__.t.bind(__webpack_require__, /*! path */ \"(app-pages-browser)/./node_modules/path/path.js\", 23));\n        const filePath = path.join(process.cwd(), \"public\", \"data.json\");\n        const fileContents = await fs.readFile(filePath, \"utf8\");\n        const data = JSON.parse(fileContents);\n        return processImageData(data);\n    } catch (error) {\n        console.error(\"Failed to read images from file:\", error);\n        return [];\n    }\n}\n/**\n * Process image array: filter & fix slug\n */ function processImageData(data) {\n    return data.filter((item)=>item.imageUrl && (item.imageUrl.startsWith(\"http\") || item.imageUrl.startsWith(\"/\"))).map((item)=>{\n        if (!item.slug || item.slug.includes(\"-new\")) {\n            item.slug = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.slugify)(item.name);\n        }\n        return item;\n    });\n}\n/**\n * Filter image array by search and tag\n */ function filterImages(images, searchQuery, selectedTag) {\n    return images.filter((item)=>{\n        var _item_desc;\n        const matchesSearch = !searchQuery || item.name.toLowerCase().includes(searchQuery.toLowerCase()) || ((_item_desc = item.desc) !== null && _item_desc !== void 0 ? _item_desc : \"\").toLowerCase().includes(searchQuery.toLowerCase());\n        const matchesTag = !selectedTag || item.tags.includes(selectedTag);\n        return matchesSearch && matchesTag;\n    });\n}\n/**\n * Server-side: get image by slug from local file\n */ async function getImageBySlug(slug) {\n    try {\n        const images = await fetchImagesServer();\n        return images.find((img)=>img.slug === slug) || null;\n    } catch (error) {\n        console.error(\"Failed to get image by slug:\", error);\n        return null;\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9pbWFnZS1zZXJ2aWNlLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUNpQztBQUVqQzs7Q0FFQyxHQUNNLGVBQWVDO0lBQ3BCLElBQUk7UUFDRixNQUFNQyxXQUFXLE1BQU1DLE1BQU07UUFDN0IsSUFBSSxDQUFDRCxTQUFTRSxFQUFFLEVBQUU7WUFDaEIsTUFBTSxJQUFJQyxNQUFNLHVCQUF1QyxPQUFoQkgsU0FBU0ksTUFBTTtRQUN4RDtRQUNBLE1BQU1DLE9BQU8sTUFBTUwsU0FBU00sSUFBSTtRQUNoQyxPQUFPQyxpQkFBaUJGO0lBQzFCLEVBQUUsT0FBT0csT0FBTztRQUNkQyxRQUFRRCxLQUFLLENBQUMsMkJBQTJCQTtRQUN6QyxPQUFPLEVBQUU7SUFDWDtBQUNGO0FBRUE7O0NBRUMsR0FDTSxlQUFlRTtJQUNwQixJQUFJO1FBQ0YsSUFBSSxJQUE2QixFQUFFO1lBQ2pDLE1BQU0sSUFBSVAsTUFBTTtRQUNsQjtRQUNBLE1BQU1RLFdBQVcsTUFBTSwrSUFBWTtRQUNuQyxNQUFNQyxLQUFLRCxTQUFTRSxRQUFRO1FBQzVCLE1BQU1DLE9BQU8sTUFBTSw4TUFBYztRQUNqQyxNQUFNQyxXQUFXRCxLQUFLRSxJQUFJLENBQUNDLE9BQU9BLENBQUNDLEdBQUcsSUFBSSxVQUFVO1FBQ3BELE1BQU1DLGVBQWUsTUFBTVAsR0FBR1EsUUFBUSxDQUFDTCxVQUFVO1FBQ2pELE1BQU1WLE9BQU9nQixLQUFLQyxLQUFLLENBQUNIO1FBQ3hCLE9BQU9aLGlCQUFpQkY7SUFDMUIsRUFBRSxPQUFPRyxPQUFPO1FBQ2RDLFFBQVFELEtBQUssQ0FBQyxvQ0FBb0NBO1FBQ2xELE9BQU8sRUFBRTtJQUNYO0FBQ0Y7QUFFQTs7Q0FFQyxHQUNELFNBQVNELGlCQUFpQkYsSUFBVztJQUNuQyxPQUFPQSxLQUNKa0IsTUFBTSxDQUFDLENBQUNDLE9BQ1BBLEtBQUtDLFFBQVEsSUFDWkQsQ0FBQUEsS0FBS0MsUUFBUSxDQUFDQyxVQUFVLENBQUMsV0FBV0YsS0FBS0MsUUFBUSxDQUFDQyxVQUFVLENBQUMsSUFBRyxHQUVsRUMsR0FBRyxDQUFDLENBQUNIO1FBQ0osSUFBSSxDQUFDQSxLQUFLSSxJQUFJLElBQUlKLEtBQUtJLElBQUksQ0FBQ0MsUUFBUSxDQUFDLFNBQVM7WUFDNUNMLEtBQUtJLElBQUksR0FBRzlCLCtDQUFPQSxDQUFDMEIsS0FBS00sSUFBSTtRQUMvQjtRQUNBLE9BQU9OO0lBQ1Q7QUFDSjtBQUVBOztDQUVDLEdBQ00sU0FBU08sYUFDZEMsTUFBbUIsRUFDbkJDLFdBQW1CLEVBQ25CQyxXQUEwQjtJQUUxQixPQUFPRixPQUFPVCxNQUFNLENBQUMsQ0FBQ0M7WUFJakJBO1FBSEgsTUFBTVcsZ0JBQ0osQ0FBQ0YsZUFDRFQsS0FBS00sSUFBSSxDQUFDTSxXQUFXLEdBQUdQLFFBQVEsQ0FBQ0ksWUFBWUcsV0FBVyxPQUN4RCxDQUFDWixDQUFBQSxhQUFBQSxLQUFLYSxJQUFJLGNBQVRiLHdCQUFBQSxhQUFhLEVBQUMsRUFBR1ksV0FBVyxHQUFHUCxRQUFRLENBQUNJLFlBQVlHLFdBQVc7UUFFbEUsTUFBTUUsYUFBYSxDQUFDSixlQUFlVixLQUFLZSxJQUFJLENBQUNWLFFBQVEsQ0FBQ0s7UUFDdEQsT0FBT0MsaUJBQWlCRztJQUMxQjtBQUNGO0FBRUE7O0NBRUMsR0FDTSxlQUFlRSxlQUFlWixJQUFZO0lBQy9DLElBQUk7UUFDRixNQUFNSSxTQUFTLE1BQU10QjtRQUNyQixPQUFPc0IsT0FBT1MsSUFBSSxDQUFDLENBQUNDLE1BQVFBLElBQUlkLElBQUksS0FBS0EsU0FBUztJQUNwRCxFQUFFLE9BQU9wQixPQUFPO1FBQ2RDLFFBQVFELEtBQUssQ0FBQyxnQ0FBZ0NBO1FBQzlDLE9BQU87SUFDVDtBQUNGIiwic291cmNlcyI6WyIvVXNlcnMvdml0b2F0bW8vRG9jdW1lbnRzL0dpdEh1Yi92MC11bmxpbWl0ZWQtZ3JpZC9saWIvaW1hZ2Utc2VydmljZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IEltYWdlSXRlbSB9IGZyb20gXCIuL3R5cGVzXCJcbmltcG9ydCB7IHNsdWdpZnkgfSBmcm9tIFwiLi91dGlsc1wiXG5cbi8qKlxuICogQ2xpZW50LXNpZGU6IGZldGNoIGltYWdlcyBmcm9tIC9kYXRhLmpzb25cbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGZldGNoSW1hZ2VzQ2xpZW50KCk6IFByb21pc2U8SW1hZ2VJdGVtW10+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKFwiL2RhdGEuanNvblwiKVxuICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgSFRUUCBlcnJvciEgc3RhdHVzOiAke3Jlc3BvbnNlLnN0YXR1c31gKVxuICAgIH1cbiAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpXG4gICAgcmV0dXJuIHByb2Nlc3NJbWFnZURhdGEoZGF0YSlcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKFwiRmFpbGVkIHRvIGZldGNoIGltYWdlczpcIiwgZXJyb3IpXG4gICAgcmV0dXJuIFtdXG4gIH1cbn1cblxuLyoqXG4gKiBTZXJ2ZXItc2lkZTogcmVhZCBpbWFnZXMgZnJvbSBsb2NhbCBmaWxlIChwdWJsaWMvZGF0YS5qc29uKVxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZmV0Y2hJbWFnZXNTZXJ2ZXIoKTogUHJvbWlzZTxJbWFnZUl0ZW1bXT4ge1xuICB0cnkge1xuICAgIGlmICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJmZXRjaEltYWdlc1NlcnZlcigpIGNhbGxlZCBvbiBjbGllbnRcIilcbiAgICB9XG4gICAgY29uc3QgZnNNb2R1bGUgPSBhd2FpdCBpbXBvcnQoXCJmc1wiKVxuICAgIGNvbnN0IGZzID0gZnNNb2R1bGUucHJvbWlzZXNcbiAgICBjb25zdCBwYXRoID0gYXdhaXQgaW1wb3J0KFwicGF0aFwiKVxuICAgIGNvbnN0IGZpbGVQYXRoID0gcGF0aC5qb2luKHByb2Nlc3MuY3dkKCksIFwicHVibGljXCIsIFwiZGF0YS5qc29uXCIpXG4gICAgY29uc3QgZmlsZUNvbnRlbnRzID0gYXdhaXQgZnMucmVhZEZpbGUoZmlsZVBhdGgsIFwidXRmOFwiKVxuICAgIGNvbnN0IGRhdGEgPSBKU09OLnBhcnNlKGZpbGVDb250ZW50cylcbiAgICByZXR1cm4gcHJvY2Vzc0ltYWdlRGF0YShkYXRhKVxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoXCJGYWlsZWQgdG8gcmVhZCBpbWFnZXMgZnJvbSBmaWxlOlwiLCBlcnJvcilcbiAgICByZXR1cm4gW11cbiAgfVxufVxuXG4vKipcbiAqIFByb2Nlc3MgaW1hZ2UgYXJyYXk6IGZpbHRlciAmIGZpeCBzbHVnXG4gKi9cbmZ1bmN0aW9uIHByb2Nlc3NJbWFnZURhdGEoZGF0YTogYW55W10pOiBJbWFnZUl0ZW1bXSB7XG4gIHJldHVybiBkYXRhXG4gICAgLmZpbHRlcigoaXRlbTogYW55KSA9PlxuICAgICAgaXRlbS5pbWFnZVVybCAmJlxuICAgICAgKGl0ZW0uaW1hZ2VVcmwuc3RhcnRzV2l0aChcImh0dHBcIikgfHwgaXRlbS5pbWFnZVVybC5zdGFydHNXaXRoKFwiL1wiKSlcbiAgICApXG4gICAgLm1hcCgoaXRlbTogYW55KSA9PiB7XG4gICAgICBpZiAoIWl0ZW0uc2x1ZyB8fCBpdGVtLnNsdWcuaW5jbHVkZXMoXCItbmV3XCIpKSB7XG4gICAgICAgIGl0ZW0uc2x1ZyA9IHNsdWdpZnkoaXRlbS5uYW1lKVxuICAgICAgfVxuICAgICAgcmV0dXJuIGl0ZW1cbiAgICB9KVxufVxuXG4vKipcbiAqIEZpbHRlciBpbWFnZSBhcnJheSBieSBzZWFyY2ggYW5kIHRhZ1xuICovXG5leHBvcnQgZnVuY3Rpb24gZmlsdGVySW1hZ2VzKFxuICBpbWFnZXM6IEltYWdlSXRlbVtdLFxuICBzZWFyY2hRdWVyeTogc3RyaW5nLFxuICBzZWxlY3RlZFRhZzogc3RyaW5nIHwgbnVsbFxuKTogSW1hZ2VJdGVtW10ge1xuICByZXR1cm4gaW1hZ2VzLmZpbHRlcigoaXRlbSkgPT4ge1xuICAgIGNvbnN0IG1hdGNoZXNTZWFyY2ggPVxuICAgICAgIXNlYXJjaFF1ZXJ5IHx8XG4gICAgICBpdGVtLm5hbWUudG9Mb3dlckNhc2UoKS5pbmNsdWRlcyhzZWFyY2hRdWVyeS50b0xvd2VyQ2FzZSgpKSB8fFxuICAgICAgKGl0ZW0uZGVzYyA/PyBcIlwiKS50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKHNlYXJjaFF1ZXJ5LnRvTG93ZXJDYXNlKCkpXG5cbiAgICBjb25zdCBtYXRjaGVzVGFnID0gIXNlbGVjdGVkVGFnIHx8IGl0ZW0udGFncy5pbmNsdWRlcyhzZWxlY3RlZFRhZylcbiAgICByZXR1cm4gbWF0Y2hlc1NlYXJjaCAmJiBtYXRjaGVzVGFnXG4gIH0pXG59XG5cbi8qKlxuICogU2VydmVyLXNpZGU6IGdldCBpbWFnZSBieSBzbHVnIGZyb20gbG9jYWwgZmlsZVxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0SW1hZ2VCeVNsdWcoc2x1Zzogc3RyaW5nKTogUHJvbWlzZTxJbWFnZUl0ZW0gfCBudWxsPiB7XG4gIHRyeSB7XG4gICAgY29uc3QgaW1hZ2VzID0gYXdhaXQgZmV0Y2hJbWFnZXNTZXJ2ZXIoKVxuICAgIHJldHVybiBpbWFnZXMuZmluZCgoaW1nKSA9PiBpbWcuc2x1ZyA9PT0gc2x1ZykgfHwgbnVsbFxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoXCJGYWlsZWQgdG8gZ2V0IGltYWdlIGJ5IHNsdWc6XCIsIGVycm9yKVxuICAgIHJldHVybiBudWxsXG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJzbHVnaWZ5IiwiZmV0Y2hJbWFnZXNDbGllbnQiLCJyZXNwb25zZSIsImZldGNoIiwib2siLCJFcnJvciIsInN0YXR1cyIsImRhdGEiLCJqc29uIiwicHJvY2Vzc0ltYWdlRGF0YSIsImVycm9yIiwiY29uc29sZSIsImZldGNoSW1hZ2VzU2VydmVyIiwiZnNNb2R1bGUiLCJmcyIsInByb21pc2VzIiwicGF0aCIsImZpbGVQYXRoIiwiam9pbiIsInByb2Nlc3MiLCJjd2QiLCJmaWxlQ29udGVudHMiLCJyZWFkRmlsZSIsIkpTT04iLCJwYXJzZSIsImZpbHRlciIsIml0ZW0iLCJpbWFnZVVybCIsInN0YXJ0c1dpdGgiLCJtYXAiLCJzbHVnIiwiaW5jbHVkZXMiLCJuYW1lIiwiZmlsdGVySW1hZ2VzIiwiaW1hZ2VzIiwic2VhcmNoUXVlcnkiLCJzZWxlY3RlZFRhZyIsIm1hdGNoZXNTZWFyY2giLCJ0b0xvd2VyQ2FzZSIsImRlc2MiLCJtYXRjaGVzVGFnIiwidGFncyIsImdldEltYWdlQnlTbHVnIiwiZmluZCIsImltZyJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/image-service.ts\n"));

/***/ })

});